package web.controller;


import java.util.Map;
import java.util.concurrent.atomic.AtomicLong;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.ResponseBody;
import web.model.Greeting;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import web.model.UserEntity;
import web.repository.UserRepository;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.transaction.Transactional;

@Transactional
@RestController
public class GreetingController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;
    private static final String template = "Hello, %s!";
    private final AtomicLong counter = new AtomicLong();

    @PersistenceContext
    EntityManager entityManager;

    @GetMapping("/greeting")
    public Greeting greeting(@RequestParam(value = "name", defaultValue = "World") String name) {
        return new Greeting(counter.incrementAndGet(), String.format(template, name));
    }

    @GetMapping("/login")
    public Map<String, Object> login(@RequestParam Map<String, Object> data) {
        entityManager.createNativeQuery("select * from userid where userid = ? ")
                .setParameter(1, data.get("userid"));
        return data;
    }

    @GetMapping("/register")
    public Map<String, Object> register(@RequestParam Map<String, Object> data) {
        entityManager.createNativeQuery("INSERT INTO usercd (userid, pwd, name) VALUES(?,?,?)")
                .setParameter(1, data.get("userid"))
                .setParameter(2, data.get("pwd"))
                .setParameter(3, data.get("name"))
                .executeUpdate();

//        UserEntity user = new UserEntity();
//        user.setUserid("user10");
//        user.setPwd("12345");
//        user.setName("Jisoo");
//        userRepository.save(user);
//        entityManager.persist(user);
//        entityManager.flush();
//        return user;
//    }

//    @GetMapping("/list")
//    public Greeting list(@RequestParam(value = "name", defaultValue = "World") String name) {
//        return new Greeting(counter.incrementAndGet(), String.format(template, name));
        return data;
        }
    @GetMapping("/delete")
    public UserEntity delete() {
        entityManager.createNativeQuery("delete usercd (userid, pwd, name) VALUES(?,?,?)")
                .setParameter(1, "user10")
                .setParameter(2, "123456")
                .setParameter(3, "abcdef")
                .executeUpdate();

        return null;
    }

    @GetMapping("/update")
    public Greeting update(@RequestParam(value = "name", defaultValue = "World") String name) {
        return new Greeting(counter.incrementAndGet(), String.format(template, name));
    }
    @GetMapping(path="/list")
    public @ResponseBody Iterable<UserEntity> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAllUserCustom();
    }

}